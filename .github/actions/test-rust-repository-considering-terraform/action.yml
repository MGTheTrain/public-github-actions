name: Tests and vulnerability scans Rust library repos
description: Tests and vulnerability scans Rust library repos

inputs:
  CARGO_TOML_DIRECTORY:
    required: true
    default: "./"
    description: 'The working directory in which the Cargo.toml resides.'
  TF_DIRECTORY:
    required: true
    default: "./devops/terraform"
    description: 'The working directory in which the terraform code reside.'
  ARM_SUBSCRIPTION_ID:
    required: true
    default: "<>"
    description: 'The Azure subscription id.'
  ARM_TENANT_ID:
    required: true
    default: "<>"
    description: 'The Azure tenant id.'
  ARM_CLIENT_ID:
    required: true
    default: "<>"
    description: 'The Azure service principal client id.'
  ARM_CLIENT_SECRET:
    required: true
    default: "<>"
    description: 'The Azure service principal client secret.'

runs:
  using: composite
  steps:
  - name: Terraform Init
    shell: bash
    id: init
    run: |
      terraform init 
      # -backend-config="subscription_id=${{ inputs.AZ_SUBSCRIPTION_ID }}" \
      # -backend-config="storage_account_name=${{ inputs.AZ_STORAGE_ACCOUNT_NAME }}" \
      # -backend-config="resource_group_name=${{ inputs.AZ_RESOURCE_GROUP_NAME }}" \
      # -backend-config="container_name=${{ inputs.AZ_STORAGE_ACCOUNT_CONTAINER_NAME }}" \
      # -backend-config="key=azure-rg/terraform.tfstate"
    working-directory: ${{ inputs.TF_DIRECTORY }}
    env:
      ARM_SUBSCRIPTION_ID: '${{ inputs.ARM_SUBSCRIPTION_ID }}'
      ARM_TENANT_ID: '${{ inputs.ARM_TENANT_ID }}'
      ARM_CLIENT_ID: '${{ inputs.ARM_CLIENT_ID }}'
      ARM_CLIENT_SECRET: '${{ inputs.ARM_CLIENT_SECRET }}'
  - name: Terraform Apply
    shell: bash
    id: apply
    run: terraform apply --auto-approve
    continue-on-error: false
    working-directory: ${{ inputs.TF_DIRECTORY }}
    env:
      ARM_SUBSCRIPTION_ID: '${{ inputs.ARM_SUBSCRIPTION_ID }}'
      ARM_TENANT_ID: '${{ inputs.ARM_TENANT_ID }}'
      ARM_CLIENT_ID: '${{ inputs.ARM_CLIENT_ID }}'
      ARM_CLIENT_SECRET: '${{ inputs.ARM_CLIENT_SECRET }}'
  - name: Install Rust
    shell: bash
    run: |
      sudo apt-get install -y curl build-essential
      sudo curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
  - name: Run tests
    shell: bash
    run: |
      cargo test
    working-directory: ${{ inputs.CARGO_TOML_DIRECTORY }}
  - name: Terraform Destroy
    shell: bash
    id: destroy
    run: terraform destroy --auto-approve
    continue-on-error: false
    working-directory: ${{ inputs.TF_DIRECTORY }}
    env:
      ARM_SUBSCRIPTION_ID: '${{ inputs.ARM_SUBSCRIPTION_ID }}'
      ARM_TENANT_ID: '${{ inputs.ARM_TENANT_ID }}'
      ARM_CLIENT_ID: '${{ inputs.ARM_CLIENT_ID }}'
      ARM_CLIENT_SECRET: '${{ inputs.ARM_CLIENT_SECRET }}'
  - name: Run cargo-audit to check for vulnerabilities in the source code üîç/üõ°Ô∏è
    shell: bash
    run: |
      cargo install cargo-audit
      cargo audit
    working-directory: ${{ inputs.CARGO_TOML_DIRECTORY }}